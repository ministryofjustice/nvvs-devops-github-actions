on:
  workflow_call:
    secrets:
      TECH_SERVICES_JIRA_URL:
        description: 'jira URL passed from the caller workflow'
        required: true
      TECH_SERVICES_JIRA_EMAIL:
        description: 'email address passed from the caller workflow'
        required: true
      TECH_SERVICES_JIRA_TOKEN:
        description: 'A token passed from the caller workflow'
        required: true

jobs:
  check-open-prs:
    runs-on: ubuntu-latest
    name: Create or Update Jira Ticket
    steps:
      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.TECH_SERVICES_JIRA_URL }}
          JIRA_USER_EMAIL: ${{ secrets.TECH_SERVICES_JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.TECH_SERVICES_JIRA_TOKEN }}

      - name: List open Dependabot PRs on main branch
        id: list-prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr list --repo ${{ github.repository }} --base main --json number,title,headRefName,author > pr_list.json
          if ! jq -e . pr_list.json > /dev/null 2>&1; then
            echo "Invalid JSON output from gh pr list"
            cat pr_list.json
            exit 1
          fi

      - name: Format PRs for Jira ticket Description
        id: format-prs
        run: |
          PR_DESCRIPTION=$(jq -r '.[] | "- PR Number: \(.number)  Title: \(.title)  Branch: \(.headRefName)  URL: https://github.com/${{ github.repository }}/pull/\(.number)\n"' pr_list.json | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "PR_DESCRIPTION=$PR_DESCRIPTION" >> $GITHUB_ENV

      - name: Create
        id: create
        uses: atlassian/gajira-create@master
        with:
          project: 'ND'
          issuetype: 'Story'
          summary: 'ND- Dependabot PRs for ${{ github.repository }}'
          description: |
              {panel}
              *Dependabot PRs :*
              {panel}
              ${{ env.PR_DESCRIPTION }}

      - name: Find Jira Issue Key
        uses: atlassian/gajira-find-issue-key@v2
        id: find-issue
        with:
          project: 'ND'
          pattern: 'Dep*'  # Regex pattern to match issue keys (e.g., .* to match all)

      - name: Show Jira Issue Key
        run: |
          echo "Found Jira issue key: ${{ steps.find-issue.outputs.issue_key }}"

      - name: Check for existing Jira ticket with Dependabot label
        id: check-ticket
        run: |
          issue_key=$(gh issue list --repo ${{ github.repository }} --label Dependabot --json number,title --jq '.[] | select(.title | contains("Dependabot")) | .number' | head -n 1)
          if [ -z "$issue_key" ]; then
            echo "No existing Jira ticket found"
          else
            echo "Found existing Jira ticket: $issue_key"
          fi
          echo "issue_key=$issue_key" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create or Update Jira Ticket
        id: create-update
        run: |
          if [ -n "${{ env.issue_key }}" ]; then
            echo "Updating existing Jira ticket: ${{ env.issue_key }}"
            curl -u "${{ secrets.TECH_SERVICES_JIRA_EMAIL }}:${{ secrets.TECH_SERVICES_JIRA_TOKEN }}" -X PUT -H "Content-Type: application/json" \
            --data "{\"fields\":{\"description\":\"${{ env.PR_DESCRIPTION }}\"}}" \
            "${{ secrets.TECH_SERVICES_JIRA_URL }}/rest/api/3/issue/${{ env.issue_key }}"
          else
            echo "Creating new Jira ticket"
            issue_key=$(curl -u "${{ secrets.TECH_SERVICES_JIRA_EMAIL }}:${{ secrets.TECH_SERVICES_JIRA_TOKEN }}" -X POST -H "Content-Type: application/json" \
            --data "{\"fields\":{\"project\":{\"key\":\"ND\"},\"summary\":\"Dependabot PRs for ${{ github.repository }}\",\"description\":\"${{ env.PR_DESCRIPTION }}\",\"issuetype\":{\"name\":\"Story\"},\"labels\":[\"Dependabot\"]}}" \
            "${{ secrets.TECH_SERVICES_JIRA_URL }}/rest/api/3/issue" | jq -r .key)
            echo "issue_key=$issue_key" >> $GITHUB_ENV
          fi

      - name: Log created or updated issue
        run: |
          if [ -n "${{ env.issue_key }}" ]; then
            echo "Issue ${{ env.issue_key }} was created or updated"
          else
            echo "Failed to create or update issue"
            exit 1
          fi

      - name: Comment on GitHub
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prs = JSON.parse(fs.readFileSync('pr_list.json', 'utf8'));
            prs.forEach(pr => {
              github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `${{ env.issue_key }} created or updated on Jira board`
              });
            });

      - name: Transition issue
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ env.issue_key }}
          transition: "Backlog"
        continue-on-error: true