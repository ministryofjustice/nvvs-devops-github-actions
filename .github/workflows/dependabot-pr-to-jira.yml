on:
  workflow_call:
    secrets:
      TECH_SERVICES_JIRA_URL:
        description: 'jira URL passed from the caller workflow'
        required: true
      TECH_SERVICES_JIRA_EMAIL:
        description: 'email address passed from the caller workflow'
        required: true
      TECH_SERVICES_JIRA_TOKEN:
        description: 'A token passed from the caller workflow'
        required: true

jobs:
  check-open-prs:
    runs-on: ubuntu-latest
    name: Create Jira Ticket
    steps:
      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.TECH_SERVICES_JIRA_URL }}
          JIRA_USER_EMAIL: ${{ secrets.TECH_SERVICES_JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.TECH_SERVICES_JIRA_TOKEN }}

      - name: List open Dependabot PRs on main branch
        id: list-prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr list --repo ministryofjustice/nvvs-devops-github-actions --base main --json number,title,headRefName,author > pr_list.json
          if ! jq -e . pr_list.json > /dev/null 2>&1; then
            echo "Invalid JSON output from gh pr list"
            cat pr_list.json
            exit 1
          fi

      - name: Format PRs for Jira ticket Description
        id: format-prs
        run: |
          PR_DESCRIPTION=$(jq -r '.[] | "* PR Number: \(.number)\n  Title: \(.title)\n  Branch: \(.headRefName)\n  URL: https://github.com/ministryofjustice/nvvs-devops-github-actions/pull/\(.number)\n"' pr_list.json | sed ':a;N;$!ba;s/\n/%0A/g')
          echo "PR_DESCRIPTION=$PR_DESCRIPTION" >> $GITHUB_ENV

      - name: Create
        id: create
        uses: atlassian/gajira-create@master
        with:
          project: 'ND'
          issuetype: 'Story'
          summary: 'Dependabot PRs for ministryofjustice/nvvs-devops-github-actions'
          description: |
            {panel}
            *Dependabot PRs:*
            ${{ env.PR_DESCRIPTION }}
            {panel}

      - name: Log created issue
        run: echo "Issue ${{ steps.create.outputs.issue }} was created"

      - name: Comment on GitHub
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prs = JSON.parse(fs.readFileSync('pr_list.json', 'utf8'));
            prs.forEach(pr => {
              github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `${{ steps.create.outputs.issue }} created on Jira board and transitioned to backlog`
              });
            });

      - name: Transition issue
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.create.outputs.issue }}
          transition: "Backlog"