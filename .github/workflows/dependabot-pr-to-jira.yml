on:
  workflow_call:
    secrets:
      TECH_SERVICES_JIRA_URL:
        description: 'jira URL passed from the caller workflow'
        required: true
      TECH_SERVICES_JIRA_EMAIL:
        description: 'email address passed from the caller workflow'
        required: true
      TECH_SERVICES_JIRA_TOKEN:
        description: 'A token passed from the caller workflow'
        required: true


jobs:
  check-open-prs:
    runs-on: ubuntu-latest
    name: Create or Update Jira Ticket
    steps:
      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.TECH_SERVICES_JIRA_URL }}
          JIRA_USER_EMAIL: ${{ secrets.TECH_SERVICES_JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.TECH_SERVICES_JIRA_TOKEN }}


      - name: List open Dependabot PRs on main branch
        id: list-prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr list --repo ${{ github.repository }} --base main --json number,title,headRefName,author > pr_list.json
          if ! jq -e . pr_list.json > /dev/null 2>&1; then
            echo "Invalid JSON output from gh pr list"
            cat pr_list.json
            exit 1
          fi


      - name: Format PRs for Jira ticket Description
        id: format-prs
        run: |
          PR_DESCRIPTION=$(jq -r '.[] | "- PR Number: \(.number)  Title: \(.title)  Branch: \(.headRefName)  URL: https://github.com/${{ github.repository }}/pull/\(.number)\n"' pr_list.json | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "PR_DESCRIPTION=$PR_DESCRIPTION" >> $GITHUB_ENV


      - name: Check for existing Jira ticket with Dependabot label
        id: check-ticket
        uses: atlassian/gajira-get-issue@v2
        with:
          jql: 'project = ND AND labels = Dependabot'
        env:
          JIRA_BASE_URL: ${{ secrets.TECH_SERVICES_JIRA_URL }}
          JIRA_USER_EMAIL: ${{ secrets.TECH_SERVICES_JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.TECH_SERVICES_JIRA_TOKEN }}


      - name: Create or Update Jira Ticket
        id: create-update
        run: |
          if [ -n "${{ steps.check-ticket.outputs.issue }}" ]; then
            echo "Updating existing Jira ticket: ${{ steps.check-ticket.outputs.issue }}"
            jira issue update --issue ${{ steps.check-ticket.outputs.issue }} --description "${{ env.PR_DESCRIPTION }}"
          else
            echo "Creating new Jira ticket"
            jira issue create --project ND --summary "Dependabot PRs for ${{ github.repository }}" --description "${{ env.PR_DESCRIPTION }}" --issuetype Story --labels Dependabot
          fi


      - name: Log created or updated issue
        run: |
          if [ -n "${{ steps.create-update.outputs.issue }}" ]; then
            echo "Issue ${{ steps.create-update.outputs.issue }} was created or updated"
          else
            echo "Failed to create or update issue"
            exit 1
          fi


      - name: Comment on GitHub
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prs = JSON.parse(fs.readFileSync('pr_list.json', 'utf8'));
            prs.forEach(pr => {
              github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `${{ steps.create-update.outputs.issue }} created or updated on Jira board`
              });
            });


      - name: Transition issue
        uses: atlassian/gajira-transition@master
        with:
          issue: ${{ steps.create-update.outputs.issue }}
          transition: "Backlog"
        continue-on-error: true